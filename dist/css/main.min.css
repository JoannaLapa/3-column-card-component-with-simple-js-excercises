*,:after,:before{box-sizing:border-box}*{margin:0;padding:0;font:inherit}ol[role=list],ul[role=list]{list-style:none}html:focus-within{scroll-behavior:smooth}body,html{height:100%}body{text-rendering:optimizeSpeed;line-height:1.5}a:not([class]){-webkit-text-decoration-skip:ink;text-decoration-skip-ink:auto}img,picture,svg{max-width:100%;display:block}@media (prefers-reduced-motion:reduce){html:focus-within{scroll-behavior:auto}*,:after,:before{animation-duration:.01ms!important;animation-iteration-count:1!important;transition-duration:.01ms!important;scroll-behavior:auto!important}}.show-modal{margin:5rem 2rem;padding:1.75rem 3.5rem;border:none;background-color:#f2f2f2;border-radius:10rem;font-size:2rem;font-weight:600}.close-modal,.show-modal{color:#004241;cursor:pointer}.close-modal{position:absolute;top:1.2rem;right:2rem;font-size:5rem;border:none;background:none}.hidden{display:none}.modal{top:50%;left:50%;transform:translate(-50%,-50%);width:70%;padding:6rem;border-radius:.3125rem;box-shadow:0 3rem 5rem rgba(0,0,0,.3);z-index:2}.modal,.overlay{position:absolute}.overlay{inset:0;width:100%;height:100%;background-color:rgba(0,0,0,.6);-webkit-backdrop-filter:blur(.1875rem);backdrop-filter:blur(.1875rem);z-index:1}.dice__img{display:none}.dice__img[data-visible=visible]{display:block}.attribution{height:2rem;color:#3e52a3;font-size:11px;text-align:center}body{background-color:#f2f2f2}.bg-primary--300{background-color:#e38826}.bg-primary--350{background-color:#e2c09c}.bg-primary--400{background-color:#006970}.bg-primary--900{background-color:#004241}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
